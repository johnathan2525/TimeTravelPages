// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTravelPages.Data;

namespace TimeTravelPages.Migrations
{
    [DbContext(typeof(TimeTravelContext))]
    [Migration("20181224172154_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("TimeTravelPages.Data.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Destination")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("PositionInTime");

                    b.Property<int>("TransporterId");

                    b.HasKey("Id");

                    b.HasIndex("TransporterId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("TimeTravelPages.Data.Transporter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Transporters");
                });

            modelBuilder.Entity("TimeTravelPages.Data.Passenger", b =>
                {
                    b.HasOne("TimeTravelPages.Data.Transporter", "Transporter")
                        .WithMany("Passengers")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
